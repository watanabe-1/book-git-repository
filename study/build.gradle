/*
 * This file was generated by the Gradle 'init' task.
 */
plugins {
    id 'org.springframework.boot' version '2.7.2'
    id 'com.github.node-gradle.node' version '3.2.1'
}

apply plugin: 'java'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.github.node-gradle.node'



group = 'org.watanabe.app'
version = '0.0.1-SNAPSHOT'
description = 'study'

/**
 * for JDK
 */
java.sourceCompatibility = JavaVersion.VERSION_17
java.targetCompatibility = JavaVersion.VERSION_17
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

/**
 * for node.js & webpack
 */
node {
    version = '16.14.2'
    download = true
}

task webpack(dependsOn: ['npm_run_webpack'])
task debug(dependsOn: ['npm_run_debug'])
task watch(dependsOn: ['npm_run_watch'])
task server(dependsOn: ['npm_run_server'])

compileTestJava {
    options.compilerArgs = ['-proc:none']
}

bootJar {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

jar {
    enabled = false
}

/**
 * clean build
 */
task cleanGen(type: Delete) {
    delete fileTree('src/main/resources/static') {
        include 'css/*.*'
        include 'res/*.*'
        include 'js/*.*'
    }
}

// build order
webpack.dependsOn cleanGen
webpack.mustRunAfter cleanGen
build.dependsOn webpack
build.mustRunAfter webpack
bootRun.dependsOn debug
bootRun.mustRunAfter webpack

/**
 * for heroku deploy
 */
task stage(dependsOn: ['clean', 'build']) {
    mustRunAfter 'clean'
}

/**
 * for Spring Boot
 * （ターミナルで）Spring Boot アプリケーション起動すると時用 eclipsでは関係ないかも
 * ./gradlew bootRun
 */
bootRun {
    // for static resource hot reloading
    //  https://docs.spring.io/spring-boot/docs/current/gradle-plugin/reference/html/#running-your-application-reloading-resources
    sourceResources sourceSets.main
    // remote debug support @see .vscode/launch.json
    jvmArgs=["-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=7778"]
}

repositories {
    mavenCentral()
}

dependencyManagement {
    dependencies {
        dependencySet(group: "org.terasoluna.gfw", version: "5.7.0.RELEASE") {
            entry "terasoluna-gfw-web"
            entry "terasoluna-gfw-common"
        }
        dependencySet(group: "org.mybatis.spring.boot", version: "2.2.2") {
            entry "mybatis-spring-boot-starter"
        }
        dependencySet(group: "commons-io", version: "2.11.0") {
            entry "commons-io"
        }
        dependencySet(group: "com.googlecode.juniversalchardet", version: "1.0.3") {
            entry "juniversalchardet"
        }
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-java8time'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-config'
    implementation 'org.apache.commons:commons-dbcp2'
    implementation 'org.springframework.boot:spring-boot-devtools'
    implementation 'com.googlecode.juniversalchardet:juniversalchardet'
    implementation 'org.postgresql:postgresql'
    implementation 'commons-io:commons-io'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-csv'
    implementation 'org.terasoluna.gfw:terasoluna-gfw-web'
    implementation 'org.terasoluna.gfw:terasoluna-gfw-common'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    compileOnly 'org.projectlombok:lombok'
}
