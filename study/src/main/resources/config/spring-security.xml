<?xml version="1.0" encoding="UTF-8"?>
<!-- Spring Securityから提供されているXMLネームスペースを有効にする。 上記例では、secという名前を割り当てている。 XMLネームスペースを使用すると、Spring Securityのコンポーネントのbean定義を簡単に行うことができる。-->
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:sec="http://www.springframework.org/schema/security" xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-5.7.xsd">

    <!-- <sec:http>タグを定義し、セキュリティ対策が不要なリソースパスの設定を行う。 -->
    <!-- SpringSecurityフィルタ除外URL設定 -->
    <!-- pattern属性にセキュリティ機能を適用しないパスのパターンを指定する。 -->
    <!-- security属性にnoneを指定する。noneを指定すると、Spring Securityのセキュリティ機能(Security Filter)が適用されない。 -->
    <!-- <sec:http pattern="/WebContent/**" security="none"/> -->
    <!-- <sec:http pattern="/resources/**" security="none"/> -->
    <sec:http pattern="/js/**" security="none" />
    <sec:http pattern="/css/**" security="none" />
    <!-- <sec:http>タグを定義する。 <sec:http>タグを定義すると、Spring Securityを利用するために必要となるコンポーネントのbean定義が自動的に行われる。-->
    <sec:http>
        <!-- 	<sec:form-login>タグを定義し、フォーム認証を使用したログインに関する設定を行う -->
        <!-- login-page属性にログインフォームを表示するためのパスを指定する。
            匿名ユーザーが認証を必要とするWebリソースにアクセスした場合は、
            この属性に指定したパスにリダイレクトしてログインフォームを表示する。
            ここでは、Spring MVCでリクエストを受けてログインフォームを表示している。-->
        <!-- login-processing-url属性に認証処理を行うためのパスを指定する。
        デフォルトのパスも/loginであるが、ここでは明示的に指定することとする。 -->
        <sec:form-login login-page="/login" default-target-url="/" authentication-failure-url="/login?error=true" username-parameter="userId" password-parameter="password" />
        <!-- ログインフォームが格納されている/loginパス配下に対し、すべてのユーザーがアクセスできる権限を付与する。 -->
        <sec:intercept-url pattern="/login/**" access="permitAll"/>
        <!-- システム管理者のみ -->
        <sec:intercept-url pattern="/system/**" access="hasRole('ROLE_SYSTEM')" />
        <!-- システム管理者および管理者のみ -->
        <sec:intercept-url pattern="/admin/**" access="hasAnyRole('ROLE_SYSTEM','ROLE_ADMIN')" />
        <!-- アプリケーションで扱うWebリソースに対してアクセス権を付与する。
        Webアプリケーションのルートパスの配下に対して、認証済みユーザーのみがアクセスできる権限を付与している。 -->
        <sec:intercept-url pattern="/**" access="isAuthenticated()"/>
        <!-- <sec:logout>タグ を定義し、ログアウトに関する設定を行う。 -->
        <sec:logout logout-url="/logout" logout-success-url="/login" invalidate-session="true" delete-cookies="JSESSIONID" />
        <!-- アクセス拒否ページ設定 -->
        <sec:access-denied-handler error-page="/accessDenied" />
        <!-- <sec:access-denied-handler>タグを定義し、アクセスエラー時の制御を行うための設定を定義する。 -->
        <!-- <sec:access-denied-handler ref="accessDeniedHandler"/> -->
        <!-- ログ出力するユーザ情報をMDCに格納するための共通ライブラリのフィルタを定義する。 -->
        <!-- <sec:custom-filter ref="userIdMDCPutFilter" after="ANONYMOUS_FILTER"/> -->
        <!-- <sec:session-management>タグ を定義し、セッション管理に関する設定を行う。 -->
        <sec:session-management />
    </sec:http>

    <!-- 認証ロジッククラス -->
    <bean id="appUserDetailsService" class="org.watanabe.app.study.service.AppUserDetailsService" />

    <!-- パスワードエンコーダ -->
    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

    <!-- アクセスエラー時のエラーハンドリングを行うコンポーネントをbean定義する。 -->
    <!-- CSRF Protection -->
    <!-- <bean id="accessDeniedHandler" class="org.springframework.security.web.access.DelegatingAccessDeniedHandler"/> -->

    <!-- ログ出力するユーザ情報をMDCにする共通ライブラリのコンポーネントをbean定義する。 -->
    <!-- Put UserID into MDC -->
    <!-- <bean id="userIdMDCPutFilter" class="org.terasoluna.gfw.security.web.logging.UserIdMDCPutFilter"/> -->

    <!-- 	<sec:authentication-manager>タグを定義して、認証機能用のコンポーネントをbean定義する。 このタグを定義しておかないとサーバ起動時にエラーが発生する。-->
    <!-- 認証ロジック -->
    <sec:authentication-manager>
        <sec:authentication-provider user-service-ref="appUserDetailsService">
            <sec:password-encoder ref="passwordEncoder" />
        </sec:authentication-provider>
    </sec:authentication-manager>
</beans>
